import pandas as pd
import streamlit as st
import json
import base64, io
from io import BytesIO
from PIL import Image

def show_images(row):
    img_list = json.loads(row)
    for img_b64 in img_list:
        img_bytes = base64.b64decode(img_b64)
        img = Image.open(BytesIO(img_bytes))
        st.image(img)


def show_A(df):
    for _, row in df.iterrows():
        st.write(f"–ó–∞–¥–∞—á–∞: \n {row['Task']}")
        choices = json.loads(row['Choices'])
        for i, ch in enumerate(choices, 1):
            st.write(f"{i}) {ch}")
        show_images(row['Images'])



st.title('üìö –ì–æ—Ç–æ–≤–∏–º—Å—è –∫ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –≤ –í–£–ó—ã')

DATA_PATH = 'https://raw.githubusercontent.com/jahongirka178/PhysRecSys/refs/heads/master/problems.csv'

df = pd.read_csv(DATA_PATH)
df['Level'] = df['Level'].replace({'–ê': 'A'})

st.write('''–ù–∞ —Ä–µ–∞–ª—å–Ω–æ–º —ç–∫–∑–∞–º–µ–Ω–µ –∑–∞–¥–∞—á–∏ –¥–µ–ª—è—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Ç–∏–ø—ã: \n
–ß–∞—Å—Ç—å 1 —Å–æ–¥–µ—Ä–∂–∏—Ç 30 –∑–∞–¥–∞–Ω–∏–π (–ê1 ‚Äì –ê30). –ö –∫–∞–∂–¥–æ–º—É –∑–∞–¥–∞–Ω–∏—é –¥–∞–µ—Ç—Å—è 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω. \n
–ß–∞—Å—Ç—å 2 —Å–æ–¥–µ—Ä–∂–∏—Ç 4 –∑–∞–¥–∞–Ω–∏—è (–í1 ‚Äì –í4), –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–µ–¥—É–µ—Ç –¥–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –≤ —á–∏—Å–ª–µ–Ω–Ω–æ–º –≤–∏–¥–µ. \n
–ß–∞—Å—Ç—å 3 —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 6 –∑–∞–¥–∞–Ω–∏–π (–°1 ‚Äì –°6), –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–∞—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–∏—Å–∞—Ç—å –∑–∞–∫–æ–Ω—ã —Ñ–∏–∑–∏–∫–∏, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã–≤–æ–¥—è—Ç—Å—è —Ç—Ä–µ–±—É–µ–º—ã–µ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è. \n
''')
st.header('–ù–∞—á–∞—Ç—å —Ä–µ—à–∞—Ç—å –º–æ–∂–Ω–æ –≤ –±–æ–∫–æ–≤–æ–º –º–µ–Ω—é. \n –ñ–µ–ª–∞–µ–º —É—Å–ø–µ—Ö–æ–≤!')

# Sidebar
st.sidebar.header('–ü–æ–¥–±–æ—Ä –∑–∞–¥–∞—á:')

levels = df['Level'].unique().tolist()
levels.append('–†–∞–∑–Ω—ã–µ')

level_input = st.sidebar.selectbox('–£—Ä–æ–≤–µ–Ω—å –∑–∞–¥–∞—á', levels)
if level_input != '–†–∞–∑–Ω—ã–µ':
    number_of_tasks = st.sidebar.slider('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á', 0, 20, 10)

if level_input == 'A':
    st.header(f'–ó–∞–¥–∞—á–∏ —É—Ä–æ–≤–Ω—è A: {number_of_tasks} —à—Ç—É–∫')
    a_tasks = df[df['Level'] == 'A'].sample(int(number_of_tasks))
    show_A(a_tasks)




